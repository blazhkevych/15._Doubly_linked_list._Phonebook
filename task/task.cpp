/*
############################################ ЗАДАНИЕ ###########################################
	Создать на основе двусвязного списка телефонный
справочник для осуществления следующих операций:
	 Добавление абонентов в телефонный справочник.
	 Удаление абонентов из телефонного справочника.
	 Модификация данных абонента.
	 Поиск абонентов по телефонному номеру или фамилии.
	 Распечатка абонентов в алфавитном порядке.
	 Сохранение телефонного справочника в файл.
	 Загрузка телефонного справочника из файла.
################################################################################################
		СТАТУС : Готово.
################################################################################################
*/
#include <conio.h>
#include <iostream>
#include "Phonebook.h"
#include <windows.h>
using namespace std;

int main()
{
	SetConsoleCP(1251);
	/*
	Задает кодовую страницу ввода, используемую консолью, связанной с вызывающим процессом.
	Консоль использует страницу входного кода для преобразования ввода с клавиатуры
	в соответствующее символьное значение.
	*/
	SetConsoleOutputCP(1251);
	/*
	Задает выходную кодовую страницу, используемую консолью, связанной с вызывающим процессом.
	Консоль использует свою кодовую страницу вывода для преобразования символьных значений,
	записанных различными функциями вывода, в изображения, отображаемые в окне консоли.
	*/

	/*

	cout << "#############################################" << endl;
	cout << "################Tests. Start.################" << endl;
	cout << "#############################################" << endl;

	// Метод поиска заданного элемента по ключу. Ключ // протестировано.
	// передаётся методу в качестве параметра. Метод
	// возвращает позицию найденного элемента в случае
	// успеха или - 1 в противном случае.
	List<char> list2;
	char s2[] = "Hello, World !!!";
	//char s2[] = "2013564978";
	cout << s2 << endl;
	int len2 = strlen(s2);
	for (int i = len2 - 1; i >= 0; i--)
		list2.AddHead(s2[i]);
	cout << "\nlist2:\n";
	list2.PrintHead();
	cout << "list2.Find('e');" << endl;
	cout << list2.Find('e') << endl << endl;

	// Метод замены значения указанного элемента на другое
	// значение, передаваемое методу в качестве параметра.
	cout << "list2.Replace('@', 3);" << endl;
	list2.Replace('@', 3);
	cout << "list2:\n";
	list2.PrintHead();
	cout << endl << endl;

	// Метод удаления элементов списка, значение которых
	// совпадает с заданным ключом.
	cout << "list2.DelElementByKey('o');" << endl;
	list2.DelElementByKey('o');
	cout << "list2:\n";
	list2.PrintHead();
	cout << endl << endl;

	// Перегруженный оператор индексирования.
	cout << "const char ch = list2[1];" << endl;
	const char ch = list2[1];
	cout << "list2:\n";
	cout << ch << endl << endl;

	// Метод сортировки элементов списка.
	cout << "list2:\n";
	list2.PrintHead();
	list2.Sort();
	cout << "list2.Sort();" << endl;
	cout << "list2:\n";
	list2.PrintHead();

	cout << "#############################################" << endl;
	cout << "#################Tests. End.#################" << endl;
	cout << "#############################################" << endl;
	*/

	Phonebook phonebook;

	while (true)
	{
		system("cls");
		phonebook.PrintMainMenu();
		int choice{ 0 };
		cout << "\n   >>> ";
		cin >> choice;
		cin.get();
		switch (choice)
		{
		case 1:
			system("cls");
			cout << "\tГлавное меню."
				"\n1. Добавление абонентов в телефонный справочник."
				<< endl;
			phonebook.AddAbonent();
			cout << "Абонент успешно добавлен в телефонный справочник !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 2:
			system("cls");
			cout << "\tГлавное меню."
				"\n2. Удаление абонентов из телефонного справочника."
				<< endl;
			phonebook.DeleteAbonent();
			cout << "Абонент успешно удален из телефонной книги !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 3:
			system("cls");
			cout << "\tГлавное меню."
				"\n3. Модификация данных абонента."
				<< endl;
			phonebook.SubscriberDataModification();
			cout << "Абонент успешно модифицирован !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 4:
			system("cls");
			cout << "\tГлавное меню."
				"\n4. Поиск абонентов по телефонному номеру или фамилии."
				<< endl;
			phonebook.SearchSubscriberBySurnameOrPhone();
			cout << "Поиск в телефонном справочнике завершен !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 5:
			system("cls");
			cout << "\tГлавное меню."
				"\n5. Распечатка абонентов в алфавитном порядке." // доделать сортировку
				<< endl;
			phonebook.PrintPhonebookHeader();
			phonebook.PrintSubscribersInAscending();
			cout << "Вывод абонентов из телефонного справочника в алфавитном порядке завершен !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;  // NOLINT
			_getch();
			break;
		case 6:
			system("cls");
			cout << "\tГлавное меню."
				"\n6. Сохранение телефонного справочника в файл."
				<< endl;
			phonebook.SavePhonebookIntoFile();
			cout << "Сохранение телефонного справочника в файл завершено !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 7:
			system("cls");
			cout << "\tГлавное меню."
				"\n7. Загрузка телефонного справочника из файла."
				<< endl;
			phonebook.LoadPhonebookFromFile();
			cout << "Загрузка телефонного справочника из файла завершена !" << endl
				<< "\nДля продолжения нажмите любую клавишу." << endl;
			_getch();
			break;
		case 8: // Выход.
			exit(0);
		}
	}
}
/*
############################################ ЗАДАНИЕ ###########################################
	Создать на основе двусвязного списка телефонный
справочник для осуществления следующих операций:
	 Добавление абонентов в базу.
	 Удаление абонентов из базы.
	 Модификация данных абонента.
	 Поиск абонентов по телефонному номеру или фамилии.
	 Распечатка абонентов в алфавитном порядке.
	 Сохранение базы в файл.
	 Загрузка базы из файла.
################################################################################################
		СТАТУС : Не готово.

		видео 02,17,00 начало

		
################################################################################################
*/
#include <iostream>

//#include <iostream>
#include "List_t.h"
#include "Phonebook.h"
using namespace std;

int main()
{
	//List<char>lst;

	cout << "#############################################" << endl;
	cout << "Tests. Start." << endl;
	cout << "#############################################" << endl;

	// Метод поиска заданного элемента по ключу. Ключ // протестировано.
	// передаётся методу в качестве параметра. Метод
	// возвращает позицию найденного элемента в случае
	// успеха или - 1 в противном случае.
	List<char> list2;
	char s2[] = "Hello, World !!!";
	//char s2[] = "2013564978";
	cout << s2 << endl;
	int len2 = strlen(s2);
	for (int i = len2 - 1; i >= 0; i--)
		list2.AddHead(s2[i]);
	cout << "\nlist2:\n";
	list2.PrintHead();
	cout << "list2.Find('e');" << endl;
	cout << list2.Find('e') << endl << endl;

	// Метод замены значения указанного элемента на другое
	// значение, передаваемое методу в качестве параметра.
	cout << "list2.Replace('@', 3);" << endl;
	list2.Replace('@', 3);
	cout << "list2:\n";
	list2.PrintHead();
	cout << endl << endl;




	cout << "#############################################" << endl;
	cout << "Tests. End." << endl;
	cout << "#############################################" << endl;

	Phonebook phonebook;
}